package ua.com.fielden.platform.attachment;

import com.google.inject.name.Named;
import jakarta.inject.Inject;
import org.junit.Ignore;
import org.junit.Test;
import ua.com.fielden.platform.attachment.IMalwareScanner.ScanResult.Found;
import ua.com.fielden.platform.attachment.IMalwareScanner.ScanResult.Ok;
import ua.com.fielden.platform.test_config.AbstractDaoTestCase;

import java.io.IOException;
import java.nio.file.Path;
import java.time.Duration;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * A test case for implementation of a malware scanner that uses ClamAV available at `localhost` on port `3310`.
 * 
 * @author TG Team
 */
public class ClamAvMalwareScannerTest extends AbstractDaoTestCase {

    public static final String hostName = "localhost";
    public static final int port = 3310;

    private static final String infectedFileName = "eicar.com.txt";
    private static final String docsFileName = "document.docx";
    public static final Duration timeout = Duration.ofMillis(500);

    @Inject @Named("attachments.location")
    private String attachmentsLocation;

    @Test
    @Ignore("Requires ClamAV.")
    public void scanning_not_infected_file_reports_success() throws IOException {
        final var clamAv = new ClamAvMalwareScanner(hostName, port, timeout);
        assertThat(clamAv.scan(attachmentPath(docsFileName)))
                .isInstanceOf(Ok.class);
    }

    @Test
    @Ignore("Requires ClamAV and locally available file eicar.com.txt.")
    public void scanning_infected_file_reports_failure() throws IOException {
        final var clamAv = new ClamAvMalwareScanner(hostName, port, timeout);
        assertThat(clamAv.scan(attachmentPath(infectedFileName)))
                .isInstanceOf(Found.class)
                .matches(res -> res.info().contains("Win.Test.EICAR_HDB-1"));
    }

    @Test
    public void scanning_file_with_no_ClamAV_available_reports_failure() throws IOException {
        final var clamAv = new ClamAvMalwareScanner("non-existing-host", port, timeout);
        assertThat(clamAv.scan(attachmentPath(docsFileName)))
                .isInstanceOf(IMalwareScanner.ScanResult.ScannerNotAvailable.class);
    }

    private Path attachmentPath(final String fileName) {
        return Path.of(attachmentsLocation, fileName);
    }

}
